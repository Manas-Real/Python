def min_heapify(arr, n, i):
    smallest = i          
    left = 2 * i + 1       
    right = 2 * i + 2      
    if left < n and arr[left] < arr[smallest]:
        smallest = left
    if right < n and arr[right] < arr[smallest]:
        smallest = right
    if smallest != i:
        arr[i], arr[smallest] = arr[smallest], arr[i]
        min_heapify(arr, n, smallest)

def heap_sort_min_heap(arr):
    n = len(arr)
    for i in range(n // 2 - 1, -1, -1):
        min_heapify(arr, n, i)
    sorted_arr = []
    for i in range(n - 1, -1, -1):
        
        arr[0], arr[i] = arr[i], arr[0]
        sorted_arr.append(arr[i])
        min_heapify(arr, i, 0)
    return sorted_arr
